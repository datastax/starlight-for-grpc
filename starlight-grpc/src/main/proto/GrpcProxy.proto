syntax = "proto3";

package pulsar.grpc.proto;

option java_multiple_files = true;
option java_package = "com.datastax.oss.starlight.grpc.proto";
option java_outer_classname = "GrpcProxy";

import "google/protobuf/wrappers.proto";

service Pulsar {
  rpc Produce(stream ProducerRequest) returns (stream ProducerResponse);
  rpc Consume(stream ConsumerRequest) returns (stream ConsumerResponse);
  rpc Ping(google.protobuf.StringValue) returns (google.protobuf.StringValue);
}

message ProducerRequest {
  oneof request {
    ProducerSend send = 1;
  }
}

message ProducerResponse {
  oneof response {
    ProducerAck ack = 1;
    ProducerSendError error = 2;
  }
}

message ProducerSend {
  bytes payload = 1;
  map<string, string> properties = 2;
  string context = 3;
  string key = 4;
  repeated string replication_clusters = 5;
  uint64 event_time = 6;
  uint64 deliver_at = 7;
  uint64 deliver_after_ms = 8;
}

message ProducerAck {
  bytes message_id = 1;
  string context = 2;
}

message ProducerSendError {
  uint32 status_code = 1;
  string error_msg = 2;
  string context = 3;
}

message ConsumerRequest {
  oneof request {
    ConsumerAck ack = 1;
    ConsumerNack nack = 2;
    ConsumerUnsubscribe unsubscribe = 3;
    ConsumerEndOfTopic end_of_topic = 4;
  }
}

message ConsumerAck {
  bytes messageId = 1;
}

message ConsumerNack {
  bytes messageId = 1;
}

message ConsumerUnsubscribe {
}

message ConsumerEndOfTopic {
}

message ConsumerResponse {
  oneof response {
    ConsumerMessage message = 1;
    ConsumerEndOfTopicResponse endOfTopicResponse = 2;
  }
}

message ConsumerMessage {
  bytes message_id = 1;
  bytes payload = 2;
  map<string, string> properties = 3;
  uint64 publish_time = 4;
  uint64 event_time = 5;
  string key = 6;
}

message ConsumerEndOfTopicResponse {
  bool reachedEndOfTopic = 1;
}

message ProducerParameters {
  enum MessageRoutingMode {
    MESSAGE_ROUTING_MODE_DEFAULT = 0;
    MESSAGE_ROUTING_MODE_SINGLE_PARTITION = 1;
    MESSAGE_ROUTING_MODE_ROUND_ROBIN_PARTITION = 2;
  }
  enum CompressionType {
    COMPRESSION_TYPE_DEFAULT = 0;
    COMPRESSION_TYPE_NONE = 1;
    COMPRESSION_TYPE_LZ4 = 2;
    COMPRESSION_TYPE_ZLIB = 3;
  }
  enum HashingScheme {
    HASHING_SCHEME_DEFAULT = 0;
    HASHING_SCHEME_JAVA_STRING_HASH = 1;
    HASHING_SCHEME_MURMUR3_32HASH = 2;
  }
  google.protobuf.UInt32Value send_timeout_millis = 1;
  google.protobuf.BoolValue batching_enabled = 2;
  google.protobuf.UInt32Value batching_max_messages = 3;
  google.protobuf.UInt32Value max_pending_messages = 4;
  google.protobuf.UInt64Value batching_max_publish_delay_millis = 5;
  MessageRoutingMode message_routing_mode = 6;
  CompressionType compression_type = 7;
  string producer_name = 8;
  google.protobuf.UInt64Value initial_sequence_id = 9;
  HashingScheme hashing_scheme = 10;
}

message DeadLetterPolicy {
  google.protobuf.UInt32Value max_redeliver_count = 1;
  string dead_letter_topic = 2;
}

message ConsumerParameters {
  enum SubscriptionType {
    SUBSCRIPTION_TYPE_DEFAULT = 0;
    SUBSCRIPTION_TYPE_EXCLUSIVE = 1;
    SUBSCRIPTION_TYPE_FAILOVER = 2;
    SUBSCRIPTION_TYPE_SHARED = 3;
  }
  enum ConsumerCryptoFailureAction {
      CONSUMER_CRYPTO_FAILURE_ACTION_DEFAULT = 0;
      CONSUMER_CRYPTO_FAILURE_ACTION_FAIL = 1;
      CONSUMER_CRYPTO_FAILURE_ACTION_DISCARD = 2;
      CONSUMER_CRYPTO_FAILURE_ACTION_CONSUME = 3;
  }
  string subscription = 1;
  google.protobuf.UInt64Value ack_timeout_millis = 2;
  SubscriptionType subscription_type = 3;
  google.protobuf.UInt32Value receiver_queue_size = 4;
  string consumer_name = 5;
  google.protobuf.UInt32Value priority_level = 6;
  DeadLetterPolicy dead_letter_policy = 7;
  google.protobuf.UInt64Value negative_ack_redelivery_delay_millis = 8;
  ConsumerCryptoFailureAction crypto_failure_action = 9;
}

message ClientParameters {
  string topic = 1;
  ProducerParameters producer_parameters = 2;
  ConsumerParameters consumer_parameters = 3;
}
